Object subclass: #Banquesahel	instanceVariableNames: 'clientId compteId'	classVariableNames: ''	poolDictionaries: ''	category: 'BanqueSahel'!!Banquesahel methodsFor: 'initialization'!initialize 	"comment stating purpose of message"		super initialize.		 compteId:= OrderedCollection new.		  clientId:= OrderedCollection new ! !!Banquesahel methodsFor: 'operation'!creerCompte: unCompte client: unClient	| compte client banque tail|	banque := self .	client := unClient.	compte := unCompte.	client compte: compte.	self compteId: compte.	self clientId: client.	  	client  id: (banque clientId at: 1 )id + 1 .  compte  numero: (banque compteId at: 1 )numero + 1  ! !!Banquesahel methodsFor: 'accessing'!clientId   ^ clientId ! !!Banquesahel methodsFor: 'accessing'!clientId: unclient   clientId  addFirst: unclient! !!Banquesahel methodsFor: 'accessing'!compteId: uncompte    compteId  addFirst: uncompte ! !!Banquesahel methodsFor: 'accessing'!compteId     ^ compteId  ! !Object subclass: #Clients	instanceVariableNames: 'id compte nom'	classVariableNames: ''	poolDictionaries: ''	category: 'BanqueSahel'!!Clients methodsFor: 'operation'!retirer:aNumber  ( self compte etat) ifFalse: [ Transcript show: 'Votre compte est fermé';cr.	^false ].	(aNumber <1)		ifTrue: [ ^false ]		ifFalse: [ 			(self compte montant > aNumber )			ifFalse: [ Transcript show: 'Solde insuffisant';cr.				^false]			ifTrue:[				(self compte) montant:(self compte - aNumber).				^true				]	 			]	! !!Clients methodsFor: 'operation'!depot: aNumber	self compte etat		ifFalse: [^ false ].	aNumber < 1		ifTrue: [ ^ false ]		ifFalse: [ self compte montant: self compte+ aNumber.			^ true ]! !!Clients methodsFor: 'operation'!transferer:aNumber a: unClient( self compte etat) ifFalse: [ Transcript show: 'Votre compte est fermé';cr.	^false ].	(aNumber <1)		ifTrue: [ ^false ]		ifFalse: [ 				(self retirer: aNumber) 					ifTrue: [						(unClient depot: aNumber)								ifTrue: [^true]								ifFalse: [ ^false ]						]						]! !!Clients methodsFor: 'accessing'!nom: anObject	nom := anObject! !!Clients methodsFor: 'accessing'!compte  ^ compte ! !!Clients methodsFor: 'accessing'!id: anObject	id := anObject ! !!Clients methodsFor: 'accessing'!id	^ id! !!Clients methodsFor: 'accessing'!nom	^ nom ! !!Clients methodsFor: 'accessing'!compte: uncompte    compte := uncompte ! !!Clients methodsFor: 'initialization'!initialize 	super initialize.	  nom:= ''.	  id:= 0.	  compte:= nil! !Object subclass: #Comptes	instanceVariableNames: 'montant etat numero'	classVariableNames: ''	poolDictionaries: ''	category: 'BanqueSahel'!!Comptes methodsFor: 'getters'!etat  "permet de savoir si un compte est fermer ou pas "	  ^ etat! !!Comptes methodsFor: 'getters'!numero	^ numero! !!Comptes methodsFor: 'getters'!montant	^ montant! !!Comptes methodsFor: 'accessing'!montant: aNumber	montant := aNumber! !!Comptes methodsFor: 'accessing'!numero: aNumber	numero:= aNumber ! !!Comptes methodsFor: 'accessing'!etat: aBoolean   "Lorque l'etat est à false, le compte est bloqué et à true , il est ouvert"	   etat := aBoolean! !!Comptes methodsFor: 'initialize'!initialize ! !